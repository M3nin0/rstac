% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ext_query.R
\name{ext_query}
\alias{ext_query}
\title{Extension functions}
\usage{
ext_query(...)
}
\arguments{
\item{...}{entries with format \code{<field> <operator> <value>}.}
}
\value{
A \code{stac_query} object containing all request parameters to be
passed to \code{stac_search} function.
}
\description{
The \code{ext_query} function implements query API extension (v0.8.0) that
can be used in \code{/stac/search} endpoint using HTTP POST method
(\code{\link{post_request}}). It allows that additional fields and
operators can be passed to \code{\link{stac_search}} function (see examples).
Each filter entry is an expression formed by
\code{<field> <operator> <value>} terms, where \code{<field>} refers to
a valid items' property. Supported \code{<fields>} depends
on STAC API service implementation. The users must rely on service providers'
documentation to know which properties can be passed to do the search.

The query API extension (v0.8.0) allows the following \code{<operators>}:
\itemize{
\item \code{==}: corresponds to \code{eq}
\item \code{!=}: corresponds to \code{neq}
\item \code{<}: corresponds to \code{lt}
\item \code{<=}: corresponds to \code{lte}
\item \code{>}: corresponds to \code{gt}
\item \code{>=}: corresponds to \code{gte}
\item \code{\%startsWith\%}: corresponds to \code{startsWith} and implements
a string prefix search operator.
\item \code{\%endsWith\%}: corresponds to \code{endsWith} and implements a
string suffix search operator.
\item \code{\%contains\%}: corresponds to \code{contains} and implements a
string infix search operator.
\item \code{\%in\%}: corresponds to \code{in} and implements a vector search
operator.
}
}
\examples{
\dontrun{
stac_search(url = "https://sat-api-dev.developmentseed.org",
            collections = "landsat-8-l1") \%>\%
     get_request()
}

}
\seealso{
\code{\link{stac_search}}, \code{\link{post_request}}
}
\author{
Rolf Simoes
}
